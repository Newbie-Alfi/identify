version: "3.9"

services:
  db:
    image: postgres:15.0-bullseye
    container_name: db_dev
    volumes:
      - sso_postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
  sso:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    image: sso_backend_dev
    container_name: sso_backend_dev
    command:
      [
        "hypercorn",
        "main:app",
        "--reload",
        "--bind",
        "0.0.0.0:8000"
      ]
    volumes:
      - ./backend/sso:/app # for hot-reload
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
  consumer:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    image: consumer_backend_dev
    container_name: consumer_backend_dev
    command:
      [
        "hypercorn",
        "main:app",
        "--reload",
        "--bind",
        "0.0.0.0:8001"
      ]
    volumes:
      - ./backend/consumer:/app # for hot-reload
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
  client:
    build:
      context: .
      dockerfile: docker/client/Dockerfile.client.dev
    image: client_dev
    container_name: client_dev
    volumes:
      - ./client:/app
    ports:
      - "3000:3000"
  second_client:
    build:
      context: .
      dockerfile: docker/secondClient/Dockerfile.client.dev
    image: second_client_dev
    container_name: second_client_dev
    volumes:
      - ./secondClient:/app
    ports:
      - "4000:4000"

volumes:
  sso_postgres_data:
